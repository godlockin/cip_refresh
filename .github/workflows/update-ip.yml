name: Update CloudFlare IP List

# ÂÆöÊó∂ËøêË°åÔºöÊØèÂ§©Âåó‰∫¨Êó∂Èó¥‰∏äÂçà8ÁÇπÂíå‰∏ãÂçà8ÁÇπ
# ‰πüÂèØ‰ª•ÊâãÂä®Ëß¶Âèë
on:
  schedule:
    - cron: '0 0,12 * * *'  # UTCÊó∂Èó¥0ÁÇπÂíå12ÁÇπÔºåÂØπÂ∫îÂåó‰∫¨Êó∂Èó¥8ÁÇπÂíå20ÁÇπ
  workflow_dispatch:  # ÂÖÅËÆ∏ÊâãÂä®Ëß¶Âèë
  push:
    branches: [ main, master ]  # Êé®ÈÄÅÂà∞‰∏ªÂàÜÊîØÊó∂‰πüËøêË°å
    paths:
      - 'ip_refresh.py'
      - 'config.json'
      - '.github/workflows/update-ip.yml'

jobs:
  update-ip-list:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run IP refresh script
      run: |
        python ip_refresh.py
    
    - name: Check if IP list changed
      id: check_changes
      run: |
        if [ -f "ip.txt" ]; then
          if git diff --quiet ip.txt 2>/dev/null; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes detected in ip.txt"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Changes detected in ip.txt"
          fi
        else
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "ip.txt file created"
        fi
    
    - name: Commit and push changes
      if: steps.check_changes.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Ê∑ªÂä†ip.txtÊñá‰ª∂
        git add ip.txt
        
        # Ëé∑ÂèñIPÊï∞Èáè
        IP_COUNT=$(wc -l < ip.txt | tr -d ' ')
        
        # Êèê‰∫§Êõ¥Êîπ
        git commit -m "üîÑ Auto update CloudFlare IP list - ${IP_COUNT} IPs ($(date '+%Y-%m-%d %H:%M:%S UTC'))"
        
        # Êé®ÈÄÅÊõ¥Êîπ
        git push
    
    - name: Create release (weekly)
      if: steps.check_changes.outputs.changed == 'true' && github.event.schedule == '0 0 * * 0'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ip-list-${{ github.run_number }}
        release_name: CloudFlare IP List ${{ github.run_number }}
        body: |
          üìã **CloudFlare IP List Update**
          
          üïí **Update Time:** ${{ github.event.head_commit.timestamp }}
          üìä **Total IPs:** $(wc -l < ip.txt) addresses
          üîÑ **Auto-generated** by GitHub Actions
          
          ### üì• Download
          - [ip.txt](https://github.com/${{ github.repository }}/releases/download/ip-list-${{ github.run_number }}/ip.txt)
          
          ### üöÄ Usage
          ```bash
          # Download latest IP list
          wget https://github.com/${{ github.repository }}/releases/latest/download/ip.txt
          
          # Or use curl
          curl -L -o ip.txt https://github.com/${{ github.repository }}/releases/latest/download/ip.txt
          ```
        draft: false
        prerelease: false
    
    - name: Upload IP list as artifact
      if: steps.check_changes.outputs.changed == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: cloudflare-ip-list
        path: ip.txt
        retention-days: 30
    
    - name: Summary
      if: always()
      run: |
        echo "## üìä Execution Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "ip.txt" ]; then
          IP_COUNT=$(wc -l < ip.txt | tr -d ' ')
          echo "‚úÖ **Success:** Generated IP list with **${IP_COUNT}** addresses" >> $GITHUB_STEP_SUMMARY
          echo "üìÖ **Update Time:** $(date '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.check_changes.outputs.changed }}" == "true" ]; then
            echo "üîÑ **Status:** IP list updated and committed" >> $GITHUB_STEP_SUMMARY
          else
            echo "üìã **Status:** No changes detected" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "‚ùå **Error:** Failed to generate IP list" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üîó Quick Links" >> $GITHUB_STEP_SUMMARY
        echo "- [üìÅ Repository](https://github.com/${{ github.repository }})" >> $GITHUB_STEP_SUMMARY
        echo "- [üìã Latest IP List](https://github.com/${{ github.repository }}/blob/main/ip.txt)" >> $GITHUB_STEP_SUMMARY
        echo "- [üîÑ Actions](https://github.com/${{ github.repository }}/actions)" >> $GITHUB_STEP_SUMMARY